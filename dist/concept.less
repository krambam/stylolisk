/** MEDIALISK STYLOLISK */
// VARIABLES
// --------------------------------------------------------------------------------

// regular padding
@default-padding: 15px;
// Breakpoints
@screen-xs-min:              480px;
@screen-sm-min:              768px;
@screen-md-min:              992px;
@screen-lg-min:              1200px;
// Mobile - Desktop Breakpoint
@screen-desktop-min: @screen-md-min;
// Mobile - Container goes 100% width
@container-dissolve-max: (@screen-desktop-min - 1);

// container-width compared to screen-width:
@container-reduction-value: 0px;

// POSSIBILITY TO OVERWRITE VARS
@import (optional) "../../../css/vars.less";
@import (optional) "../../../../../css/vars.less";

// BELOW: only processing
// --------------------------------------------------------------------------------

// mediaquery max helper value
@screen-xxs-max:             (@screen-xs-min - 1);
@screen-xs-max:              (@screen-sm-min - 1);
@screen-sm-max:              (@screen-md-min - 1);
@screen-md-max:              (@screen-lg-min - 1);
@screen-mobile-max:          (@screen-desktop-min - 1);

// Container sizes
@factor: 0.098;
@container-sm: ( ( floor( @screen-sm-min * @factor ) * 10 ) - @container-reduction-value);
@container-md: ( ( floor( @screen-md-min * @factor ) * 10 ) - @container-reduction-value);
@container-lg: ( ( floor( @screen-lg-min * @factor ) * 10 ) - @container-reduction-value);

// declare / overwrite this var for bootstrap components
@grid-gutter-width: @default-padding * 2;



// ------------------------------------------------------------------------------
// CLASSES
// -------------------------------------------------------------
.clearfix-after {
    content: " ";
    display: table;
    clear: both;
}
.clearfix {
    &:after {
        &:extend(.clearfix-after all);
    }
}
.img-responsive {
    max-width: 100%;
    height: auto;
    display: block;
    vertical-align: middle;
}
.indented {
    margin-left: @default-padding;
    margin-right: @default-padding;
}
.padded {
    padding-left: @default-padding;
    padding-right: @default-padding;
}
.unpadded{
    padding-left: 0;
    padding-right: 0;
}
.flex-center {
    display: flex;
    flex-direction: column;
    justify-content: center;
}
.bg-image-full-cover {
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}
.list-unstyled {
    list-style: none;
    margin: 0;
    padding: 0;
}
.center-block{
    margin-left: auto;
    margin-right: auto;
}

.container-fluid{
    &:after{ .clearfix-after(); }
}
.container{
    margin-right: auto;
    margin-left: auto;
    @media  (min-width: @screen-sm-min)    { width: @container-sm; }
    @media  (min-width: @screen-md-min)    { width: @container-md; }
    @media  (min-width: @screen-lg-min)    { width: @container-lg; }
    &:after{ .clearfix-after(); }
}
.row{
    margin-left: -@default-padding;
    margin-right: -@default-padding;
    &:after{ .clearfix-after(); }
}



// RESPONSIVE
// ------------------------------------------------------------------------------

// MEDIA QUERIES
@responsive-desktop:    ~"screen and (min-width: " @screen-desktop-min  ~")";
@responsive-mobile:     ~"screen and (max-width: " @screen-mobile-max   ~")";

@responsive-lg:         ~"screen and (min-width: " @screen-lg-min       ~")";
@responsive-md:         ~"screen and (min-width: " @screen-md-min       ~") and (max-width: " @screen-md-max ~")";
@responsive-sm:         ~"screen and (min-width: " @screen-sm-min       ~") and (max-width: " @screen-sm-max ~")";
@responsive-xs:         ~"screen and (min-width: " @screen-xs-min       ~") and (max-width: " @screen-xs-max ~")";
@responsive-xxs:        ~"screen and (max-width: " @screen-xxs-max      ~")";


// GRID COL SYSTEM ABSTRACT
.col-abstract{
    position: relative;
    min-height: 1px;
}

// INIT FLOAT
.colSetWidthAndFloat(@width){
    width: @width * 100%;
    float: left;
}

// SIMPLE "COL"
.col     (@width)  { &:extend(.col-abstract);   @media @responsive-desktop { .colSetWidthAndFloat(@width) }}
.col-lg  (@width)  { &:extend(.col-abstract);   @media @responsive-lg      { .colSetWidthAndFloat(@width) }}
.col-md  (@width)  { &:extend(.col-abstract);   @media @responsive-md      { .colSetWidthAndFloat(@width) }}
.col-sm  (@width)  { &:extend(.col-abstract);   @media @responsive-sm      { .colSetWidthAndFloat(@width) }}
.col-xs  (@width)  { &:extend(.col-abstract);   @media @responsive-xs      { .colSetWidthAndFloat(@width) }}
.col-xxs (@width)  { &:extend(.col-abstract);   @media @responsive-xxs     { .colSetWidthAndFloat(@width) }}

// GRID HIDERS
.hidden-desktop () { @media @responsive-desktop   { display: none; }}
.hidden-mobile  () { @media @responsive-mobile    { display: none; }}
.hidden-lg      () { @media @responsive-lg        { display: none; }}
.hidden-md      () { @media @responsive-md        { display: none; }}
.hidden-sm      () { @media @responsive-sm        { display: none; }}
.hidden-xs      () { @media @responsive-xs        { display: none; }}
.hidden-xxs     () { @media @responsive-xxs       { display: none; }}


// GRID VISIBLERS
.visible-desktop () { display: none; @media @responsive-desktop   { display: block; }}
.visible-mobile  () { display: none; @media @responsive-mobile    { display: block; }}
.visible-lg      () { display: none; @media @responsive-lg        { display: block; }}
.visible-md      () { display: none; @media @responsive-md        { display: block; }}
.visible-sm      () { display: none; @media @responsive-sm        { display: block; }}
.visible-xs      () { display: none; @media @responsive-xs        { display: block; }}
.visible-xxs     () { display: none; @media @responsive-xxs       { display: block; }}


// PRINT MEDIA QUERIES
.visible-print      { display: none  !important; }
@media print {
    .visible-print  { display: block !important; }
    .hidden-print   { display: none  !important; }
}


// DEPRECATED: Media Queries as mixins
// -------------------------------------------------

.responsive-desktop (@rules) { @media @responsive-desktop   { @rules(); }}
.responsive-mobile  (@rules) { @media @responsive-mobile    { @rules(); }}

.responsive-lg      (@rules) { @media @responsive-lg        { @rules(); }}
.responsive-md      (@rules) { @media @responsive-md        { @rules(); }}
.responsive-sm      (@rules) { @media @responsive-sm        { @rules(); }}
.responsive-xs      (@rules) { @media @responsive-xs        { @rules(); }}
.responsive-xxs     (@rules) { @media @responsive-xxs       { @rules(); }}

