// VARIABLES
// --------------------------------------------------------------------------------

// regular padding
@default-padding: 15px;
// Breakpoints
@screen-xs-min:              480px;
@screen-sm-min:              768px;
@screen-md-min:              992px;
@screen-lg-min:              1200px;
// Mobile - Desktop Breakpoint
@screen-desktop-min: @screen-md-min;
// Mobile - Container goes 100% width
@container-dissolve-max: (@screen-desktop-min - 1);


// img-repsonsive selectors
@imgSelectors:  "/website/var/tmp/image-thumbnails/",
"/website/static/img/",
"/static/img/",
"http://placehold.it/";

// POSSIBILITY TO OVERWRITE VARS
@import (optional) "../../../css/vars.less";

// BELOW: only processing
// --------------------------------------------------------------------------------

// mediaquery max helper value
@screen-xxs-max:             (@screen-xs-min - 1);
@screen-xs-max:              (@screen-sm-min - 1);
@screen-sm-max:              (@screen-md-min - 1);
@screen-md-max:              (@screen-lg-min - 1);
@screen-mobile-max:          (@screen-desktop-min - 1);

//== Container sizes
@factor: 0.098;
@container-sm: floor(@screen-sm-min * @factor) * 10;
@container-md: floor(@screen-md-min * @factor) * 10;
@container-lg: floor(@screen-lg-min * @factor) * 10;

// declare / overwrite this var for bootstrap components
@grid-gutter-width: @default-padding * 2;

// -------------------------------------------------------------
// HELPERS
// --------------------------------------------------
.clearfix{
    &:before{
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

.img-responsive{
    max-width: 100%;
    height: auto;
    display: block;
}

.indented {
    margin-left: @default-padding;
    margin-right: @default-padding;
}

.padded {
    padding-left: @default-padding;
    padding-right: @default-padding;
}



// SELF CODE WRITING MIXINS (GLOBAL, NON-TARGETING)
// ----------------------------------------------------------------------------

// define img-responsive from src selector list
.defineResponsiveImages(@links; @i) when (@i > 0) {
    .defineResponsiveImages(@links; (@i - 1));
    @link: extract(@links, @i);
    img[src^="@{link}"]{
        &:extend(.img-responsive);
    }
}
.container,
.container-fluid,
.row{
    &:extend(.clearfix all);
    margin-right: auto;
    margin-left: auto;
}

.container{
    @media (min-width: @screen-sm-min) {
        width: @container-sm;
    }
    @media (min-width: @screen-md-min) {
        width: @container-md;
    }
    @media (min-width: @screen-lg-min) {
        width: @container-lg;
    }
    // can overwrite with width 100% for mobile
    @media (max-width: @container-dissolve-max){
        width: 100%;
    }
}

.col(@width) {
    display: block;
    width: 100%;
    float: left;
    // padding-left: ceil(@grid-gutter-width / 2);
    // padding-right: ceil(@grid-gutter-width / 2);
    @media(min-width: @screen-desktop-min){
        width: @width * 100%;
    }
}



// ALL MEDIA QUERIES
// ----------------------------------------------------------------

.col-lg(@width) {
    @media (min-width: @screen-lg-min) {
        width: @width * 100%;
    }
}
.col-md(@width) {
    @media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
        width: @width * 100%;
    }
}
.col-sm(@width) {
    @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
        width: @width * 100%;
    }
}
.col-xs(@width) {
    @media (min-width: @screen-xs-min) and (max-width: @screen-xs-max)  {
        width: @width * 100%;
    }
}
.col-xxs(@width) {
    @media (max-width: @screen-xxs-max)  {
        width: @width * 100%;
    }
}

// hider helpers
.hidden-desktop(){
    @media (min-width: @screen-desktop-min) {
        display: none;
    }
}
.hidden-mobile(){
    @media (max-width: @screen-mobile-max) {
        display: none;
    }
}
.hidden-lg() {
    @media (min-width: @screen-lg-min) {
        display: none;
    }
}
.hidden-md() {
    @media (min-width: @screen-md-min) {
        display: none;
    }
}
.hidden-sm(){
    @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
        display: none;
    }
}
.hidden-xs() {
    @media (min-width: @screen-xs-min) and (max-width: @screen-xs-max)  {
        display: none;
    }
}
.hidden-xxs() {
    @media (max-width: @screen-xxs-max)  {
        display: none;
    }
}

// repsponsive inline helper
.responsive-desktop(@rules) {
    @media (min-width: @screen-desktop-min) {
        @rules();
    }
}
.responsive-mobile(@rules) {
    @media (max-width: @screen-mobile-max) {
        @rules();
    }
}
.responsive-lg(@rules) {
    @media (min-width: @screen-lg-min) {
        @rules();
    }
}
.responsive-md(@rules) {
    @media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
        @rules();
    }
}
.responsive-sm(@rules){
    @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
        @rules();
    }
}
.responsive-xs(@rules) {
    @media (min-width: @screen-xs-min) and (max-width: @screen-xs-max)  {
        @rules();
    }
}
.responsive-xxs(@rules) {
    @media (max-width: @screen-xxs-max)  {
        @rules();
    }
}
